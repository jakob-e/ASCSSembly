
// Breakpoints
$breakpoints:(
      all     :'all'
    , mobile  :'(max-width: 480px)'
    , palm    :'(max-width: 680px)'
    , tablet  :'(max-width: 960px)'
    , desktop :'(max-width: 1200px)'
    , large   :'(min-width: 1201px)' 
) !default; 


// Simple media mixin without the overthinking
// of so many breakpoint libraries
$__current_breakpoint_key: '';
@mixin media($breakpointkeys...){
    @each $key , $value in $breakpointkeys {
        $__current_breakpoint_key: $key !global;
        @media #{map-get($breakpoints, $key)}{ @content; }    
        $___current_breakpoint_key: '' !global;
    }
}

// Function to get the current media context 
@mixin media-context(){
    @return $__current_breakpoint_key; 
}

// Mixin to clone placeholders to each media directive
@mixin extends(){
    @content;
    @each $key, $value in $breakpoints {
        @include media($key){ @content; } 
    } 
}

// Mixin to create media placeholders 
@mixin new-extend($extend-name){
    %#{ $__current_breakpoint_key + $extend-name }{ @content; }
}

// Mixin to extend existing media placeholders
@mixin extend($extend-name){
    & {
        @extend %#{ $__current_breakpoint_key + $extend-name; }
    }
}



/**
 
 // 
 @imclude media(mobile){
    .foo { ... }
    .bar { ... }
 } 
 
 @media (max-width: 480px){
     .foo { ... }
     .bar { ... }
 }
 
 
 // Adding multiple keys produces multiple media queries
 @include media(mobile, tablet){
     .foo { ... }
     .bar { ... }
 }
 
 @media (max-width: 480px){
     .foo { ... }
     .bar { ... }
 }
 
 @media (max-width: 960px){
     .foo { ... }
     .bar { ... }
 }
 
 */



